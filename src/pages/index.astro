---
import Layout from '../layouts/Layout.astro'
---

<Layout>
  <h1>Pixel Cipher</h1>
  <p>Upload a file to be converted to pixels</p>

  <button
    id='upload'
    class='mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect'
  >
    <i class='material-icons'>upload</i>
    Button
  </button>
  <section></section>

  <div id='img' class='b-black b-dashed m10 p10 pt-0'>
    <h4>Image (<span></span>)</h4>
    <img />
  </div>
  <div id='b64' class='b-black b-dashed m10 p10 pt-0'>
    <h4>Base 64 (<span></span>)</h4>
    <div class='break-anywhere'></div>
  </div>
  <div id='bin' class='b-black b-dashed m10 p10 pt-0'>
    <h4>Binary Sqtring (<span></span>)</h4>
    <div></div>
  </div>
  <div id='text' class='b-black b-dashed m10 p10 pt-0'>
    <h4>Text (<span></span>)</h4>
    <div></div>
  </div>
  <div id='buff' class='b-black b-dashed m10 p10 pt-0'>
    <h4>Array Buffer (<span></span>)</h4>
    <div class='break-anywhere'></div>
  </div>
</Layout>
<script>
  import {
    toDataURL,
    toText,
    toArrayBuffer,
    toBinaryString,
    output,
    Data,
    toImg,
    Q,
  } from '../utils/fileread'

  const input = document.createElement('input')
  input.type = 'file'

  const upload = Q<HTMLElement>('#upload')
  upload.onclick = () => input.click()

  input.oninput = (e) => {
    if (!input.files?.length) throw Error('Input some file')
    const file = input.files[0]
    const start = Date.now()
    Promise.all([
      toImg('img', file),
      output('b64', toDataURL(file)),
      output('bin', toBinaryString(file)),
      output('text', toText(file)),

      output(
        'buff',
        toArrayBuffer(file).then((data: Data) => new Uint8Array(data))
      ),
    ])
      .then(() => (Q('section').innerText = `Took ${Date.now() - start} ms!`))
      .catch((e) => alert('Error! ' + e))
  }
</script>
